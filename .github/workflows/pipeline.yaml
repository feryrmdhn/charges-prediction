name: CI/CD Pipeline for FastAPI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file
        run: |
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
          echo "AWS_BUCKET_PREFIX=${{ secrets.AWS_BUCKET_PREFIX }}" >> .env
          echo "AWS_SAGEMAKER_ROLE=${{ secrets.AWS_SAGEMAKER_ROLE }}" >> .env
          echo "AWS_MODEL_NAME=${{ secrets.AWS_MODEL_NAME }}" >> .env
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> .env
          echo "AWS_ENDPOINT_NAME=${{ secrets.AWS_ENDPOINT_NAME }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "AWS_EC2_INSTANCE_ID=${{ secrets.AWS_EC2_INSTANCE_ID }}" >> .env

      - name: Build Docker image
        run: |
          docker build -t fastapi-app .

      - name: Log in to AWS ECR (Elastic Container Registry)
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private
          skip-logout: false
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names fastapi-app || aws ecr create-repository --repository-name fastapi-app
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Tag Docker image
        run: |
          docker tag fastapi-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fastapi-app:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fastapi-app:latest
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Deploy to EC2 via SSM
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_INSTANCE_ID: ${{ secrets.AWS_EC2_INSTANCE_ID }}
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "$AWS_EC2_INSTANCE_ID" \
            --region "$AWS_REGION" \
            --comment "Deploy FastAPI container" \
            --parameters 'commands=[
              "set -ex",
              "export AWS_REGION='"$AWS_REGION"'",
              "aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com",
              "docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/fastapi-app:latest",
              "docker stop fastapi-container || true",
              "docker rm fastapi-container || true",
              "docker run -d --name fastapi-container -p 80:8000 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/fastapi-app:latest"
            ]' \
            --output text